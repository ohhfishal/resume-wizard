// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: query.sql

package db

import (
	"context"
)

const getNames = `-- name: GetNames :many
SELECT name from resumes
ORDER BY name
`

func (q *Queries) GetNames(ctx context.Context) ([]string, error) {
	rows, err := q.db.QueryContext(ctx, getNames)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []string
	for rows.Next() {
		var name string
		if err := rows.Scan(&name); err != nil {
			return nil, err
		}
		items = append(items, name)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const getRows = `-- name: GetRows :many
SELECT name, body from resumes
ORDER BY name
`

func (q *Queries) GetRows(ctx context.Context) ([]Resume, error) {
	rows, err := q.db.QueryContext(ctx, getRows)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Resume
	for rows.Next() {
		var i Resume
		if err := rows.Scan(&i.Name, &i.Body); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
