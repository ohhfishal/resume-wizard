package card

import (
	"github.com/ohhfishal/resume-wizard/db"
	"github.com/ohhfishal/resume-wizard/templates/components"
)

type TailorResumeCardProps struct {
	Base            db.BaseResume
	Session         db.Session
	LockApplication bool
}

templ TailorResumeCard(props ...TailorResumeCardProps) {
	{{
	var prop TailorResumeCardProps
	if len(props) != 0 {
		prop = props[0]
	}
	base := prop.Base
	locked := prop.LockApplication
	}}
	@Card(CardProps{
		ID: "tailor-card",
	}) {
		<div class="card-header">
			<h3>Apply using: { base.Name }</h3>
		</div>
		<div>
			// TODO: Have this return a HX-Redirect to /tailor/{session}
			// That way we can store it and let the user continue later!
			<form
				if locked {
					hx-post={ "/api/dev/application/" + prop.Session.Uuid }
				} else {
					hx-post="/api/dev/generate"
				}
				hx-encoding="multipart/form-data"
				hx-swap="innerHTML"
				hx-target="#tailor-card"
			>
				<input name="base_resume_id" value={ base.ID } class="hidden" type="text"/>
				<div class="form-row">
					<div class="form-group">
						<label for="company_name">Company: </label>
						<input
							name="company_name"
							id="company_name"
							type="text"
							required
							disabled?={ locked }
							value={ prop.Session.Company }
						/>
					</div>
					<div class="form-group">
						<label for="title">Job Title: </label>
						<input
							name="title"
							id="title"
							type="text"
							required
							disabled?={ locked }
							value={ prop.Session.Position }
						/>
					</div>
				</div>
				<div class="form-group">
					<label for="description">Job Description</label>
					<textarea
						id="description"
						name="description"
						rows="3"
						required
						placeholder="Paste the job description here."
						disabled?={ locked }
					>
						{ prop.Session.Description }
					</textarea>
					<small>TODO: Maximum XXX characters.</small>
				</div>
				if locked {
					@components.TailoredResumeSection(components.TailoredResumeSectionProps{
						Session: prop.Session,
					})
				}
				<div class="btn-container">
					<button class="btn-primary">
						if locked {
							Submit
						} else {
							Generate
						}
					</button>
				</div>
			</form>
		</div>
	}
}
